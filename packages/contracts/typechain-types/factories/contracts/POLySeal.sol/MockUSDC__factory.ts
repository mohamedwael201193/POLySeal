/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MockUSDC,
  MockUSDCInterface,
} from "../../../contracts/POLySeal.sol/MockUSDC";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5033604051806040016040528060098152602001684d6f636b205553444360b81b815250604051806040016040528060058152602001646d5553444360d81b8152508160039081620000649190620001b0565b506004620000738282620001b0565b5050506001600160a01b038116620000a557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000b081620000b7565b506200027c565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200013457607f821691505b6020821081036200015557634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001ab576000816000526020600020601f850160051c81016020861015620001865750805b601f850160051c820191505b81811015620001a75782815560010162000192565b5050505b505050565b81516001600160401b03811115620001cc57620001cc62000109565b620001e481620001dd84546200011f565b846200015b565b602080601f8311600181146200021c5760008415620002035750858301515b600019600386901b1c1916600185901b178555620001a7565b600085815260208120601f198616915b828110156200024d578886015182559484019460019091019084016200022c565b50858210156200026c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61094d806200028c6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b41146101d8578063a9059cbb146101e0578063dd62ed3e146101f3578063f2fde38b1461022c57600080fd5b806370a082311461018c578063715018a6146101b55780638da5cb5b146101bd57600080fd5b806323b872dd116100c857806323b872dd14610142578063313ce5671461015557806340c10f191461016457806342966c681461017957600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f761023f565b604051610104919061077d565b60405180910390f35b61012061011b3660046107e8565b6102d1565b6040519015158152602001610104565b6002545b604051908152602001610104565b610120610150366004610812565b6102eb565b60405160068152602001610104565b6101776101723660046107e8565b61030f565b005b61017761018736600461084e565b610325565b61013461019a366004610867565b6001600160a01b031660009081526020819052604090205490565b610177610332565b6005546040516001600160a01b039091168152602001610104565b6100f7610346565b6101206101ee3660046107e8565b610355565b610134610201366004610889565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61017761023a366004610867565b610363565b60606003805461024e906108bc565b80601f016020809104026020016040519081016040528092919081815260200182805461027a906108bc565b80156102c75780601f1061029c576101008083540402835291602001916102c7565b820191906000526020600020905b8154815290600101906020018083116102aa57829003601f168201915b5050505050905090565b6000336102df8185856103a3565b60019150505b92915050565b6000336102f98582856103b5565b610304858585610434565b506001949350505050565b610317610493565b61032182826104c0565b5050565b61032f33826104f6565b50565b61033a610493565b610344600061052c565b565b60606004805461024e906108bc565b6000336102df818585610434565b61036b610493565b6001600160a01b03811661039a57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61032f8161052c565b6103b0838383600161057e565b505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981101561042e578181101561041f57604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610391565b61042e8484848403600061057e565b50505050565b6001600160a01b03831661045e57604051634b637e8f60e11b815260006004820152602401610391565b6001600160a01b0382166104885760405163ec442f0560e01b815260006004820152602401610391565b6103b0838383610653565b6005546001600160a01b031633146103445760405163118cdaa760e01b8152336004820152602401610391565b6001600160a01b0382166104ea5760405163ec442f0560e01b815260006004820152602401610391565b61032160008383610653565b6001600160a01b03821661052057604051634b637e8f60e11b815260006004820152602401610391565b61032182600083610653565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0384166105a85760405163e602df0560e01b815260006004820152602401610391565b6001600160a01b0383166105d257604051634a1406b160e11b815260006004820152602401610391565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561042e57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161064591815260200190565b60405180910390a350505050565b6001600160a01b03831661067e57806002600082825461067391906108f6565b909155506106f09050565b6001600160a01b038316600090815260208190526040902054818110156106d15760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610391565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661070c5760028054829003905561072b565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161077091815260200190565b60405180910390a3505050565b60006020808352835180602085015260005b818110156107ab5785810183015185820160400152820161078f565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107e357600080fd5b919050565b600080604083850312156107fb57600080fd5b610804836107cc565b946020939093013593505050565b60008060006060848603121561082757600080fd5b610830846107cc565b925061083e602085016107cc565b9150604084013590509250925092565b60006020828403121561086057600080fd5b5035919050565b60006020828403121561087957600080fd5b610882826107cc565b9392505050565b6000806040838503121561089c57600080fd5b6108a5836107cc565b91506108b3602084016107cc565b90509250929050565b600181811c908216806108d057607f821691505b6020821081036108f057634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102e557634e487b7160e01b600052601160045260246000fdfea264697066735822122089def6ff98b1690837807dfa7b34d48926c5e97374b89016d4bf67c549fbdddb64736f6c63430008170033";

type MockUSDCConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockUSDCConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockUSDC__factory extends ContractFactory {
  constructor(...args: MockUSDCConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockUSDC & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockUSDC__factory {
    return super.connect(runner) as MockUSDC__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockUSDCInterface {
    return new Interface(_abi) as MockUSDCInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockUSDC {
    return new Contract(address, _abi, runner) as unknown as MockUSDC;
  }
}
